{"version":3,"sources":["features/cinema/Reservation.module.css","features/cinema/cinemaSlice.js","features/cinema/Seat.js","features/cinema/SeatInfo.js","features/cinema/getRandomSeats.js","features/cinema/Reservation.js","features/cinema/ReservationForm.js","features/cinema/Summary.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","cinemaSlice","createSlice","name","initialState","seatsSelected","seatsNumber","seatsNext","reducers","makeReservation","state","action","payload","select","unselect","filter","seat","id","actions","getReservation","cinema","Seat","props","dispatch","useDispatch","reservation","useSelector","className","styles","space","reserved","some","selected","onClick","SquareInfo","type","info","infoText","getRandomSeats","seats","randomSeats","availableSeats","length","i","rows","e","cords","x","j","temp","slice","y","push","Math","floor","random","set","Set","add","Reservation","history","useHistory","useState","setSeats","setCinema","useEffect","axios","get","then","res","data","catch","err","console","log","apiSeats","Array","from","fill","forEach","fillCinema","Container","style","display","gridTemplateColumns","gap","map","SeatInfo","Button","variant","width","marginLeft","ReservationForm","setSeatsNumber","setSeatsNext","Form","onSubmit","event","preventDefault","Group","as","Row","controlId","Label","column","Col","Control","value","onChange","parseInt","target","Check","label","checked","block","height","Summary","App","path","store","configureStore","reducer","cinemaReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a7f4ca68.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"space\":\"Reservation_space__3DaUI\",\"seat\":\"Reservation_seat__3xJMx\",\"reserved\":\"Reservation_reserved__2C3OL\",\"selected\":\"Reservation_selected__3dpJc\",\"info\":\"Reservation_info__2soKp\",\"infoText\":\"Reservation_infoText__2CHoA\"};","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  seatsSelected: [],\n  seatsNumber: 0,\n  seatsNext: true,\n}\n\nexport const cinemaSlice = createSlice({\n  name: 'cinema',\n  initialState,\n  reducers: {\n    makeReservation: (state, action) => {\n      state.seatsSelected = []\n      state.seatsNumber = action.payload.seatsNumber;\n      state.seatsNext = action.payload.seatsNext;\n    },\n    select: (state, action) => {\n      state.seatsSelected = [...state.seatsSelected, action.payload]\n    },\n    unselect: (state, action) => {\n      state.seatsSelected = state.seatsSelected.filter(\n        (seat) => seat.id !== action.payload.id\n      );\n    },\n  },\n});\n\nexport const { makeReservation, select, unselect } = cinemaSlice.actions;\n\nexport const getReservation = (state) => state.cinema;\n\nexport default cinemaSlice.reducer;\n","import { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n    select,\r\n    unselect,\r\n    getReservation,\r\n  } from './cinemaSlice';\r\n\r\nimport styles from './Reservation.module.css'\r\n\r\nconst Seat = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const reservation = useSelector(getReservation)\r\n\r\n    return (\r\n        <div\r\n            className={`${styles.space} ${props.seat ? styles.seat : ''} ${props.seat && props.seat.reserved ? styles.reserved : props.seat && reservation.seatsSelected.some(seat => seat.id === props.seat.id) ? styles.selected : ''}`}\r\n            onClick={() => {\r\n                if (reservation.seatsSelected.some(seat => seat.id === props.seat.id)) dispatch(unselect(props.seat))\r\n                else if (props.seat && !reservation.seatsSelected.some(seat => seat.id === props.seat.id)) dispatch(select(props.seat)) \r\n            }}\r\n        />\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default Seat","import styles from './Reservation.module.css'\r\n\r\nconst SquareInfo = (props) => {\r\n    return(\r\n        <>\r\n            <div className={`${styles.space} ${styles.seat} ${props.type && styles[props.type]} ${styles.info}`}/>\r\n\r\n            <div className={styles.infoText}>{props.name}</div>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default SquareInfo","const getRandomSeats = (seatsNumber, seatsNext, seats, randomSeats = []) => {\r\n\r\n  const availableSeats = seats.filter(seat => !seat.reserved)\r\n\r\n  if (seatsNumber > availableSeats.length || seatsNumber <= 0) return []\r\n\r\n  if (seatsNext) {\r\n    for (let i = 0; i < availableSeats[availableSeats.length - 1].cords.x + 1; i++){\r\n      let rows = availableSeats.filter(e => e.cords.x === i)\r\n      for (let j = 0; j < rows.length - seatsNumber + 1; j++){\r\n        let temp = rows.slice(j, seatsNumber+j)\r\n        if (temp[seatsNumber-1].cords.y - temp[0].cords.y === seatsNumber - 1){\r\n          randomSeats.push(temp)\r\n        }\r\n      }\r\n    }\r\n\r\n    randomSeats = randomSeats[Math.floor(Math.random() * randomSeats.length)] ? randomSeats[Math.floor(Math.random() * randomSeats.length)] : []\r\n  } \r\n\r\n  else if (!seatsNext) {\r\n    let set = new Set()\r\n\r\n    while ([...set].length < seatsNumber) {\r\n      set.add(availableSeats[Math.floor(Math.random() * availableSeats.length)])\r\n    }\r\n\r\n    randomSeats = [...set]\r\n  } \r\n\r\n  return randomSeats\r\n}\r\n\r\nexport default getRandomSeats\r\n","import Seat from './Seat'\nimport SeatInfo from './SeatInfo'\nimport { useHistory } from 'react-router';\nimport { Button, Container } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\n\nimport {\n  select,\n  getReservation,\n} from './cinemaSlice';\n\nimport getRandomSeats from './getRandomSeats';\nimport axios from 'axios';\n\n\nconst fetchSeats = () => {\n  return axios\n    .get(\"/cinema/db.json\")\n    .then((res) => {\n      return res.data.seats\n    })\n    .catch((err) => {\n      console.log(err)\n    })\n}\n\nconst fillCinema = (apiSeats) => {\n  let cinema = Array.from(Array(10), () => new Array(15).fill(null))\n\n  apiSeats.forEach(seat => {\n    cinema[seat.cords.x][seat.cords.y] = seat\n  })\n\n  return cinema\n}\n\n\nexport function Reservation() {\n\n  const dispatch = useDispatch()\n  const history = useHistory();\n  const reservation = useSelector(getReservation);\n\n  const [seats, setSeats] = useState([])\n  const [cinema, setCinema] = useState([])\n  \n  useEffect(() => {\n    fetchSeats().then((apiSeats) => {\n      setSeats(apiSeats)\n      setCinema(fillCinema(apiSeats))\n    })\n  }, [])\n\n  useEffect(() => {\n    if (!reservation.seatsSelected.length) {\n      getRandomSeats(reservation.seatsNumber, reservation.seatsNext, seats).forEach(seat => dispatch(select(seat)))\n    }\n  }, [dispatch, seats, reservation])\n\n  const reserve = () => {\n    history.push('/summary')\n  }\n\n  return (\n    <Container className={`d-flex flex-column vh-100 justify-content-center align-items-center`}>\n      <div style={{display: 'grid', gridTemplateColumns: `repeat(15, 50px)`, gap: '10px'}}>\n        {cinema.map((rows, i) =>\n          rows.map((seat, j) => \n            <Seat key={`s${i}${j}`} seat={seat}/>\n          )\n        )}\n      </div>\n      <div className={'d-flex mt-5 justify-content-center align-items-center w-100'}>\n        <SeatInfo name=\"Miejsca Dostępne\" type=\"\"/>\n        <SeatInfo name=\"Miejsca zarezerwowane\" type=\"reserved\" />\n        <SeatInfo name=\"Twój wybór\" type=\"selected\" />\n        <Button className=\"rounded-0 h-100\" variant=\"outline-dark\" onClick={() => reserve()} style = {{width: '230px', marginLeft: '78px'}}>Rezerwuj</Button>\n      </div>\n    </Container>\n  );\n}\n","import { Button, Col, Container, Form } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeReservation, getReservation } from './cinemaSlice';\r\n\r\nimport { useHistory } from 'react-router';\r\nimport { useState } from 'react';\r\n\r\nexport function ReservationForm() {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const reservation = useSelector(getReservation);\r\n\r\n\r\n    const [seatsNumber, setSeatsNumber] = useState(reservation.seatsNumber);\r\n    const [seatsNext, setSeatsNext] = useState(reservation.seatsNext);\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        dispatch(makeReservation({ seatsNumber, seatsNext }))\r\n        history.push('/reservation')\r\n    }\r\n\r\n    return (\r\n        <Container className={`d-flex vh-100 justify-content-center align-items-center`}>\r\n            <Form onSubmit={onSubmit}>\r\n                <Form.Group as={Form.Row} controlId=\"formSeatsNumber\">\r\n                    <Form.Label column>\r\n                        Liczba miejsc:\r\n                    </Form.Label>\r\n                    <Col>\r\n                        <Form.Control \r\n                            type=\"number\" \r\n                            value={seatsNumber}\r\n                            onChange={e => setSeatsNumber(parseInt(e.target.value))} \r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Check\r\n                        label=\"Czy miejsca mają być obok siebie?\"\r\n                        checked={seatsNext}\r\n                        onChange={e => setSeatsNext(e.target.checked)}\r\n                    />\r\n                </Form.Group>\r\n                <Button block type=\"submit\" className=\"rounded-0\" variant=\"outline-dark\" style={{height: '50px'}}>Wybierz miejsca</Button>\r\n            </Form>\r\n        </Container>\r\n    )\r\n    \r\n}","import { useSelector } from 'react-redux';\r\nimport { getReservation } from './cinemaSlice';\r\n\r\nimport { Container } from 'react-bootstrap';\r\n\r\nexport function Summary() {\r\n\r\n    const reservation = useSelector(getReservation);\r\n\r\n\r\n    return(\r\n        <Container className=\"ml-4\">\r\n\r\n            <h3 className=\"font-weight-bold mt-4\">Twoja rezerwacja przebiegła pomyślnie!</h3>\r\n\r\n            <p className=\"mt-4\">Wybrałeś miejsca:</p>\r\n\r\n            <ul>\r\n                {reservation.seatsSelected.map(seat => {\r\n                    return <li key={seat.id}>rząd {seat.cords.x}, miejsce {seat.cords.y} ({seat.id})</li>\r\n                })}\r\n            </ul>\r\n\r\n            <p className=\"font-weight-bold mt-5\">Dziękujemy! W razie problemów prosimy o kontakt z dziełem administracji.</p>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Reservation } from './features/cinema/Reservation';\nimport { ReservationForm } from './features/cinema/ReservationForm';\nimport { Summary } from './features/cinema/Summary';\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <Switch>\n      <Route path=\"/reservation\">\n        <Reservation />\n      </Route>\n      <Route path=\"/summary\">\n        <Summary />\n      </Route>\n      <Route path=\"/\">\n        <ReservationForm />\n      </Route>\n    </Switch>\n  </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport cinemaReducer from '../features/cinema/cinemaSlice';\n\nexport const store = configureStore({\n  reducer: {\n    cinema: cinemaReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}